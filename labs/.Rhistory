library( Lahman )
data( Salaries )
min( yearID )
min( Salaries$yearID )
max( Salaries$yearID )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
library( dplyr )
library( pander )
Salaries <-
Salaries %>%
mutate( salary.adj = salary*(1.03)^( max(yearID) - yearID ) )
teamSalaries <-
Salaries %>%
group_by( yearID, teamID ) %>%
summarize( team.budget = sum( salary, na.rm=T ), n=n() )
Teams <- merge( Teams, teamSalaries )
Teams %>%
filter( yearID > 2000 ) %>%
mutate( cost.per.win = ( salary.adj / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n.sal, player.costs, cost.per.win ) %>%
head( 25 )
Teams %>%
filter( yearID > 2000 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Teams %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
teamSalaries <-
Salaries %>%
group_by( yearID, teamID ) %>%
summarize( team.budget = sum( salary.adj, na.rm=T ), n=n() )
teamSalaries
teamSalaries %>%
group_by( yearID ) %>%
summarize( mean.n = mean(n) )
teamSalaries %>%
group_by( yearID ) %>%
summarize( mean.n = mean(n) ) %>% print( 50 )
summarize( mean.n = mean(n) ) %>% arrange( - yearID )
teamSalaries %>%
group_by( yearID ) %>%
summarize( mean.n = mean(n) ) %>% arrange( - yearID )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Salaries <-
Salaries %>%
mutate( salary.adj = salary*(1.025)^( max(yearID) - yearID ) )
teamSalaries <-
Salaries %>%
group_by( yearID, teamID ) %>%
summarize( team.budget = sum( salary.adj, na.rm=T ), n=n() )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Teams <- merge( Teams, teamSalaries )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Salaries <-
Salaries %>%
mutate( salary.adj = salary*(1.025)^( max(yearID) - yearID ) )
teamSalaries <-
Salaries %>%
group_by( yearID, teamID ) %>%
summarize( team.budget = sum( salary.adj, na.rm=T ), n=n() )
Teams <- merge( Teams, teamSalaries )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
Teams %>%
filter( n > 25 ) %>%
mutate( cost.per.win = (team.budget / W )/100000 ) %>%
# arrange( cost.per.win ) %>%
select( yearID, teamID, lgID, Rank, G, W, n, team.budget, cost.per.win ) %>%
head( 25 )
install.packages("rmarkdown")
knitr::include_graphics( "images/shared_observations.png" )
help( Salaries )
knitr::opts_chunk$set(echo=F, fig.width=10, fig.height=6, warning=F, message=F )
library( stargazer )
library( pander )
library( dplyr )
jplot <- function( x1, x2, lab1="", lab2="", draw.line=T, ... )
{
plot( x1, x2,
pch=19,
col=gray(0.6, alpha = 0.2),
cex=3.5,
bty = "n",
xlab=lab1,
ylab=lab2, cex.lab=1.5,
... )
if( draw.line==T ){
ok <- is.finite(x1) & is.finite(x2)
lines( lowess(x2[ok]~x1[ok]), col="red", lwd=3 ) }
}
reg.dat <- read.csv("../data-and-analysis/data-prepped/RegressionData.csv")
dat <- reg.dat
bm.dat <- read.csv( "../data-and-analysis/data-prepped/NPOBM_census_data.csv", stringsAsFactors=F )
bm <- select( bm.dat, EIN, BMunemp, BMpoverty, BMmedinc,
BMownerocc, BMblack, BMhs, BMh.density,
Onethirdsupportpublic, Onethirdsupportgifts )
# reg.dat
d2 <- merge( reg.dat, bm.dat, by="EIN" )
dat$np <- dat$NPOWealthFacZ
dat$bm <- dat$BMWealthFacZ
dat$status <- dat$NPOWealthFacZ - dat$BMWealthFacZ
d3 <- sample_n( dat, 100 )
jplot( d3$np, d3$status  )
jplot( d3$NPOUrbanFacZ, d3$status )
jplot( d3$NPOWealthFacZ, d3$BMWealthFacZ )
summary( lm( BMWealthFacZ ~ NPOWealthFacZ, data=dat ))
summary( lm( status ~ NPOWealthFacZ, data=dat ))
jplot( dat$NPOWealthFacZ, dat$BMWealthFacZ )
