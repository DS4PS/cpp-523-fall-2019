m.01 <- lm( heart.rate ~ caffeine )
y.hat <- m.01$fitted.values
jplot( caffeine, heart.rate,
lab1="Caffeine", lab2="Heart Rate",
draw.line=F, main="Partitioning the Variance of Y" )
segments( x0=caffeine, y0=y, y1=y.bar, col="firebrick", lwd=2 )
segments( x0=caffeine, y0=y.bar, y1=y.hat, col="steelblue", lwd=2 )
abline( h=y.bar, col="steelblue", lwd=3 )
abline( m.01, col="firebrick", lwd=3 )
text( 350, 50, "Explained SS", col="steelblue", cex=2, pos=4 )
text( 350, 60, "Residual SS", col="firebrick", cex=2, pos=4 )
text( 480, y.bar, expression(bar(Y)), cex=1, col="steelblue", pos=1, offset=1 )
text( 480, predict( m.01, data.frame(caffeine=480) ),
expression(hat(Y)), cex=1, col="firebrick", pos=3, offset=0 )
text( 480, 130, expression(y[i]), cex=1, col="gray40", pos=3, offset=0 )
y <- heart.rate
y.bar <- mean( heart.rate )
m.01 <- lm( heart.rate ~ caffeine )
y.hat <- m.01$fitted.values
jplot( caffeine, heart.rate,
lab1="Caffeine", lab2="Heart Rate",
draw.line=F, main="Partitioning the Variance of Y" )
segments( x0=caffeine, y0=y, y1=y.bar, col="firebrick", lwd=2 )
segments( x0=caffeine, y0=y.bar, y1=y.hat, col="steelblue", lwd=2 )
abline( h=y.bar, col="steelblue", lwd=3 )
abline( m.01, col="firebrick", lwd=3 )
text( 350, 50, "Explained SS", col="steelblue", cex=2, pos=4 )
text( 350, 60, "Residual SS", col="firebrick", cex=2, pos=4 )
text( 480, y.bar, expression(bar(Y)), cex=1, col="steelblue", pos=1, offset=1 )
text( 480, predict( m.01, data.frame(caffeine=480) ),
expression(hat(Y)), cex=1, col="firebrick", pos=3, offset=0.5 )
text( 480, 130, expression(y[i]), cex=1, col="gray40", pos=3, offset=1 )
knitr::opts_chunk$set(echo = TRUE)
x <- rnorm(1000,50000,10000)  # Teacher quality
hist(x)
y <- rnorm(1000,2,1)  # Socio Economic Status
y[ y > 4 ] <- 4
y[ y < 0 ] <- 0
hist( y )
z <- 400*y + 200*rnorm(1000)   # Parent's IQ
z[ z > 1600 ] <- 1600
z[ z < 0 ] <- 0
w <- -100*y + 10*rnorm(1000)   # Classroom Size
hist( w )
tqual <- x   # Teacher quality
ses <- y  # Socio Economic Status
csize <- w  # Classroom Size
piq <- z  # Parent's IQ
options(scipen=6)
tqual <- x / 10000
test <- 50 + 10000*tqual + 500*ses +
5*piq - 50*csize + 1000*rnorm(1000)
test <- 450 * ( ( test - min(test) ) / ( max(test) - min(test) )) + 400
hist( test)
# change the scale so it makes sense
csize <- round( (csize + 450)*(45/432), 0 )
dat <- data.frame( test, csize, tqual, ses )
set.seed( 1234 )
x <- rnorm(1000,50000,10000)  # Teacher quality
# hist(x)
y <- rnorm(1000,2,1)  # Socio Economic Status
y[ y > 4 ] <- 4
y[ y < 0 ] <- 0
# hist( y )
z <- 400*y + 200*rnorm(1000)   # Parent's IQ
z[ z > 1600 ] <- 1600
z[ z < 0 ] <- 0
w <- -100*y + 10*rnorm(1000)   # Classroom Size
# hist( w )
tqual <- x   # Teacher quality
ses <- y  # Socio Economic Status
csize <- w  # Classroom Size
piq <- z  # Parent's IQ
options(scipen=6)
tqual <- x / 10000
test <- 50 + 10000*tqual + 500*ses +
5*piq - 50*csize + 1000*rnorm(1000)
test <- 450 * ( ( test - min(test) ) / ( max(test) - min(test) )) + 400
# hist( test)
# change the scale so it makes sense
csize <- round( (csize + 450)*(45/432), 0 )
dat <- data.frame( test, csize, tqual, ses )
panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
test <- cor.test(x,y)
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("***", "**", "*", ".", " "))
text(0.5, 0.5, txt, cex = 1.5 )
text(.7, .8, Signif, cex=cex, col=2)
}
pairs( dat, lower.panel=panel.smooth, upper.panel=panel.cor)
jplot <- function( x1, x2, cex=3.5, draw.line=T, ... )
{
plot( x1, x2,
pch=19,
col=gray(0.6, alpha = 0.2),
bty = "n",
cex.lab=1.5,
... )
if( draw.line==T ){
ok <- is.finite(x1) & is.finite(x2)
lines( lowess(x2[ok]~x1[ok]), col="red", lwd=3 ) }
}
panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if( missing(cex.cor) ) cex <- 0.8/strwidth(txt)
test <- cor.test(x,y)
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("***", "**", "*", ".", " "))
text(0.5, 0.5, txt, cex = 1.5 )
text(.7, .8, Signif, cex=cex, col=2)
}
pairs( dat, lower.panel=panel.smooth, upper.panel=panel.cor)
nrow( dat )
panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use="pairwise.complete.obs")
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
test <- cor.test(x,y)
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("***", "**", "*", ".", " "))
text(0.5, 0.5, txt, cex = 2 )
text(.7, .8, Signif, cex=3, col=2)
}
panel.smooth <- function (x, y, col = par("col"), bg = NA, pch = par("pch"),
cex = 1, col.smooth = "red", span = 2/3, iter = 3, ...)
{
points(x, y, pch = 19, col = gray(0.5,0.5),
bg = bg, cex = 0.7)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
lines(stats::lowess(x[ok], y[ok], f = span, iter = iter),
col = col.smooth, lwd=2, ...)
}
pairs( dat[1:100], lower.panel=panel.smooth, upper.panel=panel.cor)
pairs( dat[1:100,], lower.panel=panel.smooth, upper.panel=panel.cor)
pairs( dat[1:500,], lower.panel=panel.smooth, upper.panel=panel.cor)
panel.cor <- function(x, y, digits=2, prefix="", cex.cor)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y, use="pairwise.complete.obs")
txt <- format(c(r, 0.123456789), digits=digits)[1]
txt <- paste(prefix, txt, sep="")
if(missing(cex.cor)) cex <- 0.8/strwidth(txt)
test <- cor.test(x,y)
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("***", "**", "*", ".", " "))
text(0.5, 0.5, txt, cex = 2 )
text(.7, .8, Signif, cex=3, col=2)
}
panel.smooth <- function (x, y, col = par("col"), bg = NA, pch = par("pch"),
cex = 1, col.smooth = "red", span = 2/3, iter = 3, ...)
{
points(x, y, pch = 19, col = gray(0.5,0.5),
bg = bg, cex = 0.7)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
lines(stats::lowess(x[ok], y[ok], f = span, iter = iter),
col = col.smooth, lwd=2, ...)
}
pairs( dat[1:1000,], lower.panel=panel.smooth, upper.panel=panel.cor)
coef(m1)
knitr::opts_chunk$set(echo=F, fig.width=9, fig.height=6, warning=F, message=F )
library( stargazer )
m1 <- lm( test ~ csize  )
m2 <- lm( test ~ csize + tqual )
m3 <- lm( test ~ tqual + ses )
m4 <- lm( test ~ csize + ses  )
m5 <- lm( test ~ csize + tqual + ses  )
stargazer( m1, m2, m3, m4, m5,
type = "html", digits=2,
dep.var.caption = "Dependent Variable: Test Scores",
# dep.var.labels = "",
dep.var.labels.include = FALSE,
omit.stat = c("rsq", "f", "ser"),
column.labels = c("Model 1", "Model 2", "Model 3", "Model 4", "Model 5"),
covariate.labels=c("Classroom Size",
"Teacher Quality",
"Socio-Economic Status",
"Intercept"),
notes.label = "Standard errors in parentheses")
coef(m1)
coef(m1)[2]
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slop     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, 1:5, bty="n", type="n", yaxis="n", ylab="", xlab="Slope for Class Size" )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxis="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8:3), ylim=c(0,6) )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxis="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,6) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:5, pch=19, col="orange", cex=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxis="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,6) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:2, pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, col="orange", lwd=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxis="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,6) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y=1:length(slopes),
col="orange", lwd=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxis="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,6) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,6) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
text( slopes, 1:length(slopes), round(slopes,2), col="gray", pos=3 )
mod1.slope    <- -2
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
text( slopes, 1:length(slopes), round(slopes,2),
col="gray", pos=3, cex=2, offset=1 )
mod1.slope    <- -2.01
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2.32
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
text( slopes, 1:length(slopes), round(slopes,2),
col="gray", pos=3, cex=2, offset=1 )
mod1.slope    <- -2.01
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2.32
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
model.labels <- c("Model 1", "Model 2")
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
points( slopes, 1:length(slopes), pch=19, col="orange", cex=2 )
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
text( slopes, 1:length(slopes), model.labels,
col="darkgray", pos=3, cex=1.2, offset=1 )
mod1.slope    <- -2.01
mod1.ci.lower <- -3
mod1.ci.upper <- -1
mod2.slope     <- -2.32
mod2.ci.lower <- -5
mod2.ci.upper <- 1
# etc.
# slopes <- c( mod1.slope, mod2.slope, ... mod5.slope )
# ci.lower <- c( mod1.ci.lower, mod2.ci.lower, ... mod5.ci.lower )
# ci.upper <- c( mod1.ci.upper, mod2.ci.upper, ... mod5.ci.upper )
slopes <- c( mod1.slope, mod2.slope )
ci.lower <- c( mod1.ci.lower, mod2.ci.lower )
ci.upper <- c( mod1.ci.upper, mod2.ci.upper )
model.labels <- c("Model 1", "Model 2")
plot( -8:3, -8:3, bty="n", type="n", yaxt="n",
ylab="", xlab="Slope for Class Size",
xlim=c(-8,3), ylim=c(0,length(slopes)+1) )
abline( v=0, col="darkgray" ) # null hypothesis
segments( x0=ci.lower, x1=ci.upper, y0=1:length(slopes),
col="orange", lwd=2 )
points( slopes, 1:length(slopes), pch=19, col="darkgray", cex=2 )
text( slopes, 1:length(slopes), model.labels,
col="darkgray", pos=3, cex=1.2, offset=1 )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F)
URL <- "https://raw.githubusercontent.com/DS4PS/Data-Science-Class/master/DATA/syr_parcels.csv"
dat <- read.csv( URL, stringsAsFactors=FALSE )
head( dat, 10 )
View(dat)
head( dat )
tail( dat )
dim( dat )
nrow( dat )
ncol( dat )
summary( dat )
dim( dat )
names( dat )
head( dat$acres )
sum( dat$acres )
head( dat )
sum( dat )
sum( dat$acres )
dim( dat$acres )
length( dat$acres )
nrow( dat )
head( dat )
table( dat$vacantbuil )
sum( dat$vacantbuil )
sum( dat$vacantbuil, na.rm=T )
x <- c(T,T,F,F,F)
sum( x )
as.numeric( x )
sum( x )
summary( dat$acres )
summary( dat$assessedla )
summary( dat )
sum( dat$acres )
sum( dat$acres )
help( sum )
`PEOPLE-GEOCODES-COMPILED` <- readRDS("C:/Users/jdlecy/Dropbox/00 - Nonprofit Open Data/99 - Open Datasets/Open_data_ignacio/Geocoding/PEOPLE-GEOCODES-COMPILED.rds")
